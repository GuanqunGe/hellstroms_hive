<?xml version="1.0" ?>

<!-- Some basic information, a tag that defines uniquely this analysis, and a topology that also defines it -->
<topology tag="1g0pDirt" name ="1#gamma0p" def = "reco_vertex_size==1 &amp;&amp; reco_asso_showers==1  &amp;&amp; reco_asso_tracks==0" bdtcut = "(0.916,0.84,0.87,0.16)" />
<!--(Cosmic, BNB,NCPi0,Nue)-->

<!-- ================================================== BDT FILES [First the ones that we stack in things]==================================================== -->

<filedir>/pnfs/uboone/persistent/users/markross/single_photon_persistent_data/vertexed_mcc9_v33 </filedir>

<bdtfile filename = "Test/ncdeltarad_overlay_test_run1_v33.0.root" tag = "NCDeltaRadOverlay" hist_style = "hist" dirs = "singlephotonana/" col = "(1.0,0.4,0.4)" plot_name = "x2 SM NC #Delta Radiative (LEE)" scale = "2.0" signal = "true" plot_on_top = "false">
    <definition>
        <cut> mctruth_is_delta_radiative==1 </cut>  
        <!-- <cut> mctruth_nu_vertex_x &gt; 10.0 &amp;&amp; mctruth_nu_vertex_x &lt; 246.35 </cut>
        <cut> mctruth_nu_vertex_y &gt; -106.5 &amp;&amp; mctruth_nu_vertex_y &lt; 106.5 </cut>
        <cut> mctruth_nu_vertex_z &gt; 10.0 &amp;&amp; mctruth_nu_vertex_z &lt; 1026.8 </cut>
        <cut> mctruth_cc_or_nc == 1 </cut>
        <cut> mctruth_num_exiting_pi0 == 0</cut>
        <cut> mctruth_exiting_photon_energy &gt; 0.02 </cut>
        <cut> Sum$(mctruth_exiting_proton_energy-0.93827 &gt; 0.02)==1</cut> -->
    </definition>
</bdtfile>

<bdtfile filename = "Test/ncdeltarad_overlay_test_run1_v33.0.root" tag = "NCDeltaRadOverlaySM" hist_style = "hist" dirs = "singlephotonana/" col = "(0.97,0.75,0.0)" plot_name = "1x SM NC #Delta Radiative" signal = "true" plot_on_top = "false" >
    <definition>
        <cut> mctruth_is_delta_radiative==1 </cut>
    </definition>
</bdtfile>



<bdtfile filename = "Test/ncpi0_overlay_test_run1_v33.0.root" tag = "NCPi0" hist_style = "hist" dirs = "singlephotonana/" col = "(0.6,0.8,1.0)" plot_name = "BNB NC 1 #pi^{0}" scale = "1.0">
    <definition>
        <cut> !mctruth_is_delta_radiative==1 </cut>  
        <cut> mctruth_cc_or_nc==1 </cut>
        <cut> mctruth_num_exiting_pi0==1</cut>
    </definition>
</bdtfile>


<bdtfile filename = "Test/ccpi0_overlay_test_run1_v33.0.root" tag = "CCPi0" hist_style = "hist" dirs = "singlephotonana/" col = "(0.4,0.8,1.0)" plot_name = "BNB CC 1 #pi^{0}" scale = "1.0">
    <definition>
        <cut> mctruth_cc_or_nc==0 </cut>
        <cut> mctruth_num_exiting_pi0==1</cut>
    </definition>
</bdtfile>


<bdtfile filename = "Test/bnb_overlay_test_run1_v33.0.root" tag = "BNBOverlays" hist_style = "hist" dirs = "singlephotonana/" col = "(0.4,0.4,1.0)" plot_name = "BNB Other" >
    <definition>
        <cut> !mctruth_is_delta_radiative==1 </cut>  
        <cut> fabs(mctruth_nu_pdg)==14  </cut>
        <cut> !(mctruth_cc_or_nc==1 &amp;&amp; mctruth_num_exiting_pi0==1)</cut>
        <cut> !(mctruth_cc_or_nc==0 &amp;&amp; mctruth_num_exiting_pi0==1)</cut>
    </definition>
</bdtfile>

<bdtfile filename = "Test/nue_overlay_test_run1_v33.0.root" tag = "NueOverlays" hist_style = "hist" dirs = "singlephotonana/" col = "(0.9,0.5,0.9)" plot_name = "#nu_{e} Intrinsic" >
    <definition>
        <cut> !mctruth_is_delta_radiative==1 </cut>  
        <cut> fabs(mctruth_nu_pdg)==12  </cut>
    </definition>
</bdtfile>


<bdtfile filename = "dirt_overlay_run1_v33.0.root" tag = "Dirt" hist_style = "hist" dirs = "singlephotonana/" col = "(0.6,0.4,0.2)" plot_name = "Dirt" > 
    <definition><cut>1</cut></definition>
</bdtfile>

<bdtfile filename = "../vertexed_mcc9_v26/data_5e19_run1_v26.51.root" tag = "Data5e19" hist_style = "E1p" dirs = "singlephotonana/" col = "(0.0,0.0,0.0)" plot_name = "On-Beam Data">
    <definition><cut>1</cut></definition>
    <data type="OnBeam">
        <tor860_wcut> 4.026e+19 </tor860_wcut>   
        <E1DCNT_wcut> 8915733.0</E1DCNT_wcut>   
    </data>
</bdtfile>

<bdtfile filename = "../vertexed_mcc9_v26/AllRun/Split/bnbext_test_run1_v26.5.root" tag = "BNBext" hist_style = "hist" dirs = "singlephotonana/" col = "(0.2,0.8,0.2)" plot_name = "Cosmic Data" fillstyle = "3333" scale = "1">
    <definition>
    </definition>
    <data type="OffBeam">
        <tor860_wcut> 4.026e19 </tor860_wcut>   
        <E1DCNT_wcut> 8915733.0</E1DCNT_wcut>   
        <EXT>36566176.0</EXT>  
    </data>
</bdtfile>

<!-- ================================================== BDT FILES [Now the training files]==================================================== -->


<bdtfile filename = "Train/ncdeltarad_overlay_train_v33.0.root" tag = "NCDeltaRadOverlayTrain" hist_style = "hist" dirs = "singlephotonana/" col = "(1.0,0.4,0.4)" plot_name = "NC Delta Train">
    <definition>
        <cut> mctruth_is_delta_radiative==1 </cut>  
        <cut> mctruth_nu_vertex_x &gt; 5.0 &amp;&amp; mctruth_nu_vertex_x &lt; 252.35 </cut>
        <cut> mctruth_nu_vertex_y &gt; -111.5 &amp;&amp; mctruth_nu_vertex_y &lt; 111.5 </cut>
        <cut> mctruth_nu_vertex_z &gt; 5.0 &amp;&amp; mctruth_nu_vertex_z &lt; 1031.8 </cut>
        <cut> mctruth_cc_or_nc == 1 </cut>
        <cut> mctruth_num_exiting_pi0 == 0</cut>
        <cut> mctruth_exiting_photon_energy &gt; 0.02 </cut>
         <cut> Sum$(mctruth_exiting_proton_energy-0.93827 &gt; 0.02)==0</cut>
		<cut> (reco_shower_startx-reco_vertex_x)^2+(reco_shower_starty-reco_vertex_y)^2+(reco_shower_startz-reco_vertex_z)^2 &lt; 5</cut>
    </definition>
    <training>
        <cut> sim_shower_overlay_fraction[0] &lt; 0.5 </cut>
        <cut> sim_shower_pdg[0] == 22 </cut>
    </training>
</bdtfile>
<bdtfile filename = "Train/ncdeltarad_overlay_train_v33.0.root" tag = "NCDeltaRadOverlayTest" hist_style = "hist" dirs = "singlephotonana/" col = "(1.0,0.4,0.4)" plot_name = "NC Delta Test">
    <definition>
        <cut> mctruth_is_delta_radiative==1 </cut>  
        <cut> mctruth_nu_vertex_x &gt; 5.0 &amp;&amp; mctruth_nu_vertex_x &lt; 252.35 </cut>
        <cut> mctruth_nu_vertex_y &gt; -111.5 &amp;&amp; mctruth_nu_vertex_y &lt; 111.5 </cut>
        <cut> mctruth_nu_vertex_z &gt; 5.0 &amp;&amp; mctruth_nu_vertex_z &lt; 1031.8 </cut>
        <cut> mctruth_cc_or_nc == 1 </cut>
        <cut> mctruth_num_exiting_pi0 == 0</cut>
        <cut> mctruth_exiting_photon_energy &gt; 0.02 </cut>
         <cut> Sum$(mctruth_exiting_proton_energy-0.93827 &gt; 0.02)==0</cut>
		<cut> (reco_shower_startx-reco_vertex_x)^2+(reco_shower_starty-reco_vertex_y)^2+(reco_shower_startz-reco_vertex_z)^2 &lt; 5</cut>
    </definition>
    <training>
        <cut> sim_shower_overlay_fraction[0] &lt; 0.5 </cut>
        <cut> sim_shower_pdg[0] == 22 </cut>
    </training>
</bdtfile>


<bdtfile filename = "../vertexed_mcc9_v26/AllRun/Split/bnbext_train_v26.5.root" tag = "BNBextTrain" hist_style = "hist" dirs = "singlephotonana/" col = "(0.2,0.8,0.2)" plot_name = "Cosmic Data Training" fillstyle = "3333" scale = "1">
    <definition>
        <cut>1</cut>
    </definition>
    <training><cut>1</cut></training>
</bdtfile>
<bdtfile filename = "../vertexed_mcc9_v26/AllRun/Split/bnbext_train_v26.5.root" tag = "BNBextTest" hist_style = "hist" dirs = "singlephotonana/" col = "(0.2,0.8,0.2)" plot_name = "Cosmic Data Test" fillstyle = "3333" scale = "1">
    <definition>
        <cut>1</cut>
    </definition>
    <training><cut>1</cut></training>
</bdtfile>


<bdtfile filename = "Train/bnb_overlay_train_v33.0.root" tag = "BNBOverlaysTrain" hist_style = "hist" dirs = "singlephotonana/" col = "(0.4,0.4,1.0)" plot_name = "BNB Other Train" >
    <definition>
        <cut> !mctruth_is_delta_radiative==1 </cut>  
        <cut> !(mctruth_cc_or_nc==1 &amp;&amp; mctruth_num_exiting_pi0==1)</cut>
		<cut> fabs(mctruth_nu_pdg)==14 </cut>
    </definition>
    <training>
        <cut> sim_shower_overlay_fraction[0]&lt;0.95</cut>
    </training>
</bdtfile>
<bdtfile filename = "Test/bnb_overlay_test_v33.0.root" tag = "BNBOverlaysTest" hist_style = "hist" dirs = "singlephotonana/" col = "(0.4,0.4,1.0)" plot_name = "BNB Other Test" >
    <definition>
        <cut> !mctruth_is_delta_radiative==1 </cut>  
        <cut> !(mctruth_cc_or_nc==1 &amp;&amp; mctruth_num_exiting_pi0==1)</cut>
		<cut> fabs(mctruth_nu_pdg)==14 </cut>
    </definition>
    <training>
        <cut> sim_shower_overlay_fraction[0]&lt;0.95</cut>
    </training>
</bdtfile>


<bdtfile filename = "Train/bnb_overlay_train_v33.0.root" tag = "NCpi0Train" hist_style = "hist" dirs = "singlephotonana/" col = "(0.4,0.4,1.0)" plot_name = "NCpi0 Train" >
    <definition>
        <cut> !mctruth_is_delta_radiative==1 </cut>  
        <cut> (mctruth_cc_or_nc==1 &amp;&amp; mctruth_num_exiting_pi0==1)</cut>
    </definition>
    <training>
        <cut> sim_shower_overlay_fraction[0]&lt;0.9</cut>
        <cut> sim_shower_pdg[0]==22</cut>
    </training>
</bdtfile>
<bdtfile filename = "Test/bnb_overlay_test_v33.0.root" tag = "NCpi0Test" hist_style = "hist" dirs = "singlephotonana/" col = "(0.4,0.4,1.0)" plot_name = "NCpi0 Test" >
    <definition>
        <cut> !mctruth_is_delta_radiative==1 </cut>  
        <cut> (mctruth_cc_or_nc==1 &amp;&amp; mctruth_num_exiting_pi0==1)</cut>
    </definition>
    <training>
        <cut> sim_shower_overlay_fraction[0]&lt;0.9</cut>
        <cut> sim_shower_pdg[0]==22</cut>
    </training>
</bdtfile>


<bdtfile filename = "Train/ncpi0_overlay_train_v33.0.root" tag =         "SSVTrain" hist_style = "hist" dirs = "singlephotonana/" col = "(0.4,0.4,1.0)" plot_name = "SSV Train" >
    <definition>
	        <cut> !mctruth_is_delta_radiative==1 </cut>··
			<cut> (mctruth_cc_or_nc==1 &amp;&amp; mctruth_num_exiting_pi0==1)</cut>
	</definition>
	<training>
			<cut> sim_shower_pdg[0]==22</cut>
	</training>
</bdtfile>
<bdtfile filename = "Test/ncpi0_overlay_test_v33.0.root" tag = "SSVTest" hist_style = "hist" dirs = "singlephotonana/" col = "(0.4,0.4,1.0)" plot_name = "SSV Test" >
    <definition>
	        <cut> !mctruth_is_delta_radiative==1 </cut>··
	        <cut> (mctruth_cc_or_nc==1 &amp;&amp; mctruth_num_exiting_pi0==1)</cut>
    </definition>
    <training>
	        <cut> sim_shower_pdg[0]==22</cut>
    </training>
</bdtfile>


<bdtfile filename = "Train/nue_overlay_train_v33.0.root" tag = "NueIntrinTest" hist_style = "hist" dirs = "singlephotonana/" col = "(0.2,0.2,1.0)" plot_name = "Nue Intrin">
    <definition>1</definition>
    <training>
        <cut>sim_shower_overlay_fraction[0]&lt;0.9</cut>
    </training>
</bdtfile>
<bdtfile filename = "Test/nue_overlay_test_v33.0.root" tag = "NueIntrinTest" hist_style = "hist" dirs = "singlephotonana/" col = "(0.2,0.2,1.0)" plot_name = "Nue Intrin">
    <definition>1</definition>
    <training>
        <cut>sim_shower_overlay_fraction[0]&lt;0.9</cut>
    </training>
</bdtfile>


<!-- ============================================== ACTUAL BDT TMVA Setup ==================================== -->

<mva type="BDT" use="yes" tag = "COSMIC" name ="Cosmic focused BDT" binning = "(40,0.0,1.0)">
    <method type = "XGBoost" use = "yes">
        <param> n_trees=525</param>
        <param> tree_method=exact</param>
        <param> n_gpus=0</param>
        <param> objective=binary:logistic</param>
        <param> eval_metric=logloss</param>
        <!--<param> eval_metric=auc</param>-->
        <param> min_child_weight=1</param>
        <param> gamma=1.0</param>
        <param> max_depth=5</param>
        <param> verbosity=1</param>
        <param> eta=0.02</param>
        <param> subsample=0.9</param>
    </method>
    <file
        bkg_train_tag = "BNBextTrain" 
        bkg_test_tag = "BNBext"
        bkg_test_cut = "Entry$%10<4" 
        sig_train_tag = "NCDeltaRadOverlayTrain"
        sig_test_tag = "NCDeltaRadOverlay"
        sig_test_cut = "Entry$%10<4"
        />
    <scan min = "0.5" max = "1.0" steps="5"/>
</mva>

<mva type="BDT" use="yes" tag = "BNB" name ="BNB focused BDT" binning = "(40,0.0,1.0)">
    <method type = "XGBoost" use = "yes">
        <param> n_trees= 1400</param>
        <param> tree_method=exact</param>
        <param> n_gpus=0</param>
        <param> objective=binary:logistic</param>
        <param> eval_metric=logloss</param>
        <!--<param> eval_metric=auc</param>-->
        <param> min_child_weight=1</param>
        <param> gamma=1.0</param>
        <param> max_depth=3</param>
        <param> verbosity=1</param>
        <param> eta=0.02</param>
        <param> subsample=0.9</param>   
    </method>
    <file
        bkg_train_tag = "BNBOverlaysTrain"
        bkg_test_tag = "BNBOverlays"
        bkg_test_cut = "Entry$%10<4"
        sig_train_tag = "NCDeltaRadOverlayTrain"
        sig_test_tag = "NCDeltaRadOverlay"
        sig_test_cut = "Entry$%10<4"
        />
    <scan min = "0.5" max = "1.0" steps="5"/>
</mva>


<mva type="BDT" use="yes" tag = "NCPi0" name ="NCpi0 focused BDT" binning = "(40,0.0,1.0)">
    <method type = "XGBoost" use = "yes">
        <param> n_trees= 700</param>
        <param> tree_method=exact</param>
        <param> n_gpus=0</param>
        <param> objective=binary:logistic</param>
        <param> eval_metric=logloss</param>
        <!--<param> eval_metric=auc</param>-->
        <param> min_child_weight=1</param>
        <param> gamma=1.0</param>
        <param> max_depth=2</param>
        <param> verbosity=1</param>
        <param> eta=0.01</param>
        <param> subsample=0.9</param>   
    </method>
    <file      
        bkg_train_tag = "NCpi0Train"
        bkg_test_tag = "NCPi0"
        bkg_test_cut = "Entry$%10<4"
        sig_train_tag = "NCDeltaRadOverlayTrain"
        sig_test_tag = "NCDeltaRadOverlay"
        sig_test_cut = "Entry$%10<4"
        />
    <scan min = "0.5" max = "1.0" steps="5"/>
</mva>


<mva type="BDT" use="yes" tag = "Nue" name ="Nue fake BDT" binning = "(40,0.0,1.0)">
    <method type = "XGBoost" use = "yes">
        <param> n_trees= 900</param>
        <param> tree_method=exact</param>
        <param> n_gpus=0</param>
        <param> objective=binary:logistic</param>
        <param> eval_metric=logloss</param>
        <!--<param> eval_metric=auc</param>-->
        <param> min_child_weight=1</param>
        <param> gamma=1.0</param>
        <param> max_depth=2</param>
        <param> verbosity=1</param>
        <param> eta=0.01</param>
        <param> subsample=0.9</param>
    </method>
    <file      
        bkg_train_tag = "NueIntrinTrain"
        bkg_test_tag  = "NueIntrinTrain"
        bkg_test_cut  = "Entry$%2==1"
        sig_train_tag = "NCDeltaRadOverlayTrain"
        sig_test_tag = "NCDeltaRadOverlay"
        sig_test_cut = "Entry$%10<4"
        />
    <scan min = "0.5" max = "1.0" steps="5"/>
</mva>


<!-- ================================================== PRE-CUTS   ==================================================== -->

<!--<precut def = "reco_track_displacement<85&amp;&amp;reco_track_displacement>65" name = "track cut"/>-->

<precut def = "reco_shower_energy_max[0]>30" name = "Michel Cut"/>



<precut def = "reco_vertex_dist_to_SCB < 20" name = "Vertex Contained within 20cm to SCB"/>

<!--
<precut def = "reco_shower_startx > 5.0 &amp;&amp; reco_shower_startx < 252.35" name = "fiducial x"/>
<precut def = "reco_shower_starty > -111.5 &amp;&amp; reco_shower_starty < 111.5" name = "fiducial y"/>
<precut def = "reco_shower_startz > 5.0 &amp;&amp; reco_shower_startz < 1031.8" name = "fiducial z"/>

<precut def = "(reco_shower_theta_yz[0]>-1 &amp;&amp;reco_shower_theta_yz[0]<1)" name = "Angle theta_yz"/>
<precut def = "(reco_shower_startz[0] < 700)" name = "InvesPosz" /> 
<precut def = "(reco_shower_startx[0] > 75)" name = "InvesPosx" /> 
<precut def = "reco_shower_energy_max[0]>170" name = "Energy Cut"/>
<precut def = "reco_shower_energy_max[0]<220" name = "Energy Cut"/>
<precut def = "(reco_shower_startx[0] > 75)" name = "InvesPosx" /> 
<precut def = "(reco_shower_theta_yz[0]>-1 &amp;&amp;reco_shower_theta_yz[0]<1)" name = "Angle theta_yz"/>
<precut def = "(reco_vertex_z[0] < 700)" name = "InvesPosz" /> 
<precut def = "(reco_vertex_x[0] > 75)" name = "InvesPosx" /> 
<precut def = "(reco_shower_theta_yz[0]>-1 &amp;&amp;reco_shower_theta_yz[0]<1)" name = "Angle theta_yz"/>
<precut def = "(reco_vertex_z[0] < 700)" name = "Z Position" /> 
<precut def = "(reco_vertex_x[0] > 75)" name = "X Position" /> 
<precut def = "reco_shower_energy_max[0]>170" name = "Energy Cut"/>
<precut def = "reco_shower_energy_max[0]<220" name = "Energy Cut"/>
<precut def = "reco_shower_energy_max[0]<220" name = "Energy Cut"/>
<precut def = "(reco_shower_phi_yx[0]>0)" name = "Angle theta_yx"/>
<precut def = "reco_shower_opening_angle[0]<0.2" name = "OpenAng" /> 
<precut def = "(reco_shower_dEdx_amalgamated[0]>0)" name = "2Michel Cut"/>
<precut def = "(reco_shower_dEdx_plane2[0]>0)" name = "2Michel Cut"/>
<precut def = "(reco_shower_dEdx_plane1[0]>0)" name = "2Michel Cut"/>
<precut def = "(reco_shower_dEdx_plane0[0]>0)" name = "2Michel Cut"/>
<precut def = "(reco_shower3d_dEdx_plane0[0]>0)" name = "2Michel Cut"/>
<precut def = "(reco_shower3d_dEdx_plane1[0]>0)" name = "2Michel Cut"/>
<precut def = "(reco_shower3d_dEdx_plane2[0]>0)" name = "2Michel Cut"/>
-->

<!-- ============================================== Variables, BDT training and otherwise ====================================== -->
<var def = "reco_vertex_x" binning = "(24,-20,270)" unit = "Reco Vertex X [cm]" type="d" logplot="false" training="" group = "1"/>
<var def = "reco_vertex_y" binning = "(24,-140,140)" unit = "Reco Vertex Y [cm]" type="d" logplot="false" training="" group = "1"/>
<var def = "reco_vertex_z" binning = "(56,-20,1100)" unit = "Reco Vertex Z [cm]" type="d" logplot="false" training="" group = "1"/>

<var def = "mctruth_nu_vertex_x" binning = "(20,-2000,2000)" unit =  "MCTruth Vertex X [cm]" type="d" logplot="false" training="" group = "1"/>
<var def = "mctruth_nu_vertex_y" binning = "(23,-2500,2100)" unit = "MCTruth Vertex Y [cm]" type="d" logplot="false" training="" group = "1"/>
<var def = "mctruth_nu_vertex_z" binning = "(25,-2000,3000)" unit = "MCTruth Vertex Z [cm]" type="d" logplot="false" training="" group = "1"/>

<alias key="xc" value ="TMath::Min(mctruth_nu_vertex_x-0,256-mctruth_nu_vertex_x)"/>
<alias key="yc" value ="TMath::Min(mctruth_nu_vertex_y-(-116),116-mctruth_nu_vertex_y)"/>
<alias key="zc" value ="TMath::Min(mctruth_nu_vertex_z-0,1032-mctruth_nu_vertex_z)"/> <!--Positive: inside-->
<var def = "TMath::Min(TMath::Min(#yc#,#xc#),#zc#)" binning = "(50,-2300,200)" unit = "MCTruth Vertex Distance to active TPC" type="d" logplot="false" training="" group = "1"/>

<var def = "TMath::Min(TMath::Min(#yc#,#xc#),#zc#)" binning = "(50,-2300,200)" unit = "MCTruth Vertex Distance to active TPC (log)" type="d" logplot="true" training="" group = "1"/>

<var def = "reco_vertex_dist_to_SCB" binning="(8,-10,30)" unit = "Distance from vertex to SCB" type ="d" training="" group = "1"/>
<var def = "reco_vertex_dist_to_active_TPC" binning="(8,-5,35)" unit = "Distance from vertex to active TPC" type ="d" training="" group = "1"/>


<!-- vertex vars-->
<!--
<alias key = "POx" value ="(reco_shower_startx-135)" />
<alias key = "POy" value ="(reco_shower_starty)" />
<alias key = "POz" value ="(reco_shower_startz-550)" />

<var def = "((reco_shower_startx-135)*reco_shower_dirx+reco_shower_starty*reco_shower_diry+reco_shower_startz*reco_shower_dirz)/(sqrt(pow(reco_shower_startx-135,2)+pow(reco_shower_starty,2)+pow(reco_shower_startz,2)))" binning = "(40,0.0,1)" unit = "Centerness" type="d" training = "0123"/>
-->
<!--0-->
<var def = "TMath::Min(fabs(acos(reco_shower_dirz)),fabs(acos(-reco_shower_dirz)))" binning = "(40,0.0,1.571)" unit = "Shower Beamness[rad]" type="d" training = "12"/>
<var def = "reco_shower_dirz*(3.14-reco_shower_opening_angle[0])" binning = "(40,-3.14,3.14)" unit = "Shower Beamness: dirz*(pi-opnang)[rad]" type="d" training = "12"/>
<var def = "TMath::Min(fabs(acos(reco_shower_diry)),fabs(acos(-reco_shower_diry)))" binning = "(40,0.0,1.571)" unit = "Shower Cosmicyness[rad]" type="d" training = "0"/>

<var def = "Sum$(reco_flash_total_pe_in_beamgate)" binning ="(40,0,4000)" unit = "Total PE in beamgate" type ="d" training=""/>
<var def = "Min$(reco_shower_flash_shortest_distz)" binning ="(40,0,200)" unit = "Dist shower to flash in Z" type ="d" training="0"/>

<var def = "reco_vertex_in_SCB" binning="(4,-1,3)" unit = "Vertex in SCB" type ="d" training=""/>

<var def = "reco_vertex_dist_to_SCB" binning="(40,0,75)" unit = "Distance from vertex to SCB" type ="d" training="0"/>
<var def = "reco_vertex_dist_to_active_TPC" binning="(40,0,75)" unit = "Distance from vertex to active TPC" type ="d" training=""/>

<var def = "reco_shower_energy_max[0]/1000.0" binning = "(18,0,0.5)" unit = "Reconstructed Shower Energy [GeV]" type = "d" logplot = "false" training="123"/>

<var def = "reco_shower_energy_max[0]/1000.0" binning = "(18,0,0.5)" unit = "Reconstructed Shower Energy (log) [GeV]" type = "d" logplot = "true" training="123"/>

 <var def = "reco_shower_dirx" binning								= "(10 ,0,1  )" unit = "test shower_dirx " type = "d" logplot="false"  training=""/>
<!--10-->
<var def = "reco_shower_diry" binning								= "(10 ,0,1  )" unit = "test3  " type = "d" logplot="false"  training=""/>
<var def = "reco_shower_dirz" binning								= "(10 ,0,1  )" unit = "test4  " type = "d" logplot="false"  training=""/>

<var def = "reco_vertex_x" binning = "(12,-20,270)" unit = "Reco Vertex X [cm]" type="d" logplot="false" training=""/>
<var def = "reco_vertex_y" binning = "(12,-140,140)" unit = "Reco Vertex Y [cm]" type="d" logplot="false" training=""/>
<var def = "reco_vertex_z" binning = "(12,-20,1100)" unit = "Reco Vertex Z [cm]" type="d" logplot="false" training=""/>

<!--<var def = "combined_score" binning = "(40,0.3,0.70)" unit = "Combined Super Score" type="d" logplot = "true" training=""/>-->
<var def = "run_number" binning  ="(40,4900,8500)" unit = "Run Number" type="d" logplot = "false" training=""/>

<!--- all of the assorted shower dE/dx's -->
 <var def = "reco_shower_dEdx_plane0[0]" binning = "(10 ,0,15 )" unit = "Shower dEdx plane 0 " type = "d" logplot="false" training=""/>
 <var def = "reco_shower_dEdx_plane1[0]" binning = "(10 ,0,15 )" unit = "Shower dEdx plane 1 " type = "d" logplot="false" training=""/>
 <var def = "reco_shower_dEdx_plane2[0]" binning = "(10 ,0,15 )" unit = "Shower dEdx plane 2 " type = "d" logplot="false" training=""/>

 <var def = "max(max(reco_shower_dEdx_plane0_max,reco_shower_dEdx_plane1_max),reco_shower_dEdx_plane2_max)" binning = "(10 ,0,15 )" unit = "Max Shower dEdx all plane " type = "d" logplot="false" training="0123"/>
 <var def = "(reco_shower_dEdx_plane0_max+reco_shower_dEdx_plane1_max+reco_shower_dEdx_plane2_max-min(min(reco_shower_dEdx_plane0_max,reco_shower_dEdx_plane1_max),reco_shower_dEdx_plane2_max))/2" binning = "(10 ,0,15 )" unit = "Ave. of 2 max Shower dEdx  " type = "d" logplot="false" training="0123"/>

<var def = "(reco_shower_dEdx_plane0_median[0]+reco_shower_dEdx_plane1_median[0]+reco_shower_dEdx_plane2_median[0])/3" binning = "(10 ,0,15 )" unit = "Average Shower dEdx all planes" type = "d" logplot="false" training="03"/>

<var def = "reco_shower3d_dEdx_plane2[0]" binning = "(40,0,10.0)" unit = "Shower3D dedx plane 2 [mev/cm]" type = "d" logplot = "false" training ="013"/>

<!--20-->
<var def = "reco_shower_dEdx_amalgamated[0]" binning="(40,0.0,10.0)" unit = "Amalgamated Shower dE/dx [Mev/cm]" type = "d" logplot = "false"  training = "013"/>

<var def = "reco_shower_dEdx_amalgamated[0]*fabs(reco_shower_dirz)" binning="(40,0.0,10.0)" unit = "Dirz*Amalgamated Shower dE/dx [Mev/cm]" type = "d" logplot = "false"  training = "013"/>
<!-- shower geometry + calorimetry -->
<!--
<var def = "reco_shower_length[0]" binning = "(40,0,100)" unit = "Reconstructed Shower Length [cm]" type = "d" logplot = "false"  training="0123"/>
-->
<var def = "reco_shower_length[0]/(reco_shower_energy_max[0]/1000.0)" binning = "(40,0 ,2000)" unit = "Ratio Reconstruncted Shower Length/Reconstructed Shower Energy [cm/GeV]" type = "d" logplot = "false" training="0123"/>
<var def = "reco_shower_length[0]/(reco_shower_energy_max[0]/1000.0)" binning = "(40,0 ,2000)" unit = "Ratio Reconstruncted Shower Length/Reconstructed Shower Energy (log) [cm/GeV]" type = "d" logplot = "true" training="0123"/>

<!--Open Ang-->
<var def = "reco_shower_opening_angle[0]" binning = "(15,0,1)" unit = "Reconstructed Shower OpAng [cm]" type = "d" logplot = "false"  training="0123"/>
<var def = "reco_shower_opening_angle[0]*TMath::Min(fabs(acos(reco_shower_dirz)),fabs(acos(-reco_shower_dirz)))" binning = "(40,0,1)" unit = "Reconstructed Shower OpAng*Beamness [cm]" type = "d" logplot = "false"  training="3"/>

<var def = "reco_shower_phi_yx[0]" binning = "(6,-3.14,3.14)" unit = "Reconstructed Shower  #phi_{yx} [rad]" type = "d" logplot = "false"  training="0123"/>
<var def = "reco_shower_theta_yz[0]" binning = "(8,-3.14,3.14)" unit = "Reconstructed Shower #theta_{yz} [rad]" type = "d" logplot = "false"  training="0123"/>
<var def = "reco_shower_nuscore[0]" binning = "(40, 0, 1)" unit = "Reconstructed Shower Associated Slice Neutrino Score" type = "d" logplot = "false"  training="02"/>
<var def = "(reco_shower_trackscore[0])" binning = "(40,0,0.5)" unit = "Shower Score (0 means likely to be shower)" type ="d" training ="0123"/>
<!--<var def = "TMath::Min(TMath::Min(reco_shower_startto_nearest_dead_wire_plane0,reco_shower_startto_nearest_dead_wire_plane1),reco_shower_startto_nearest_dead_wire_plane2)" unit = "(distance from shower start to nearest dead wire)" binning ="(40,0,3)" type="d" training="0123"/>
	 -->
<var def = "reco_shower_num_daughters" binning = "(3,0,3)" unit = "Num Dau Shower" type="d" training=""/>


<var def = "reco_shower_energy_max/(3.0*(reco_shower_num_hits_plane2+reco_shower_num_hits_plane0+reco_shower_num_hits_plane1))" unit="Ratio of energy to number of hits" binning = "(40,0,1)" type="d" training="0123"/>
<var def = "reco_shower_energy_max/(100.0*reco_shower_length*reco_shower_opening_angle)" unit = "ratio of calo energy to geometric size" binning = "(40,0,1.5)" type = "d" training = "0123"/>
<var def = "sqrt(pow(0.001*reco_shower_energy_max[0]*reco_shower_diry[0],2)+pow(0.001*reco_shower_energy_max[0]*reco_shower_dirx[0],2))" unit = "Photon Transverse Momentum [GeV]" binning = "(40,0,0.6)" type = "d" training = "0123"/>
<var def = "sqrt(pow(0.001*reco_shower_energy_max[0]*reco_shower_implied_diry[0],2)+pow(0.001*reco_shower_energy_max[0]*reco_shower_implied_dirx[0],2))" unit = "Photon Implied Transverse Momentum [GeV]" binning = "(40,0,0.6)" type = "d" training = "0123"/>



<!-- Observartion -->
<var def = "reco_shower_startx" binning = "(12,-20,270)" unit = "Reco Shower Start X [cm]" type="d" logplot="false" training=""/>
<var def = "reco_shower_starty" binning = "(12,-140,140)" unit = "Reco Shower Start Y [cm]" type="d" logplot="false" training=""/>
<var def = "reco_shower_startz" binning = "(12,-20,1100)" unit = "Reco Shower Start Z [cm]" type="d" logplot="false" training=""/>

<!--30-->
<!-- Mark is Bored on flight to Korea variables but he remembered to grab a local copy of all stage 0 vertexed files so is doing 14 hours of "feature development" wooo -->
<!--
<var def = "stage1_2BDT_XGBOOSTNCPi0_mva" binning = "(40,0,1)"  unit = "NCpi0 BDT" type="d" logplot="false" training="4"/>
<var def = "stage1_2BDT_XGBOOSTBNB_mva" binning = "(40,0,1)"  unit = "BNB BDT" type="d" logplot="false" training="4"/>
<var def = "stage1_2BDT_XGBOOSTCOSMIC_mva" binning = "(40,0,1)"  unit = "COSMIC BDT" type="d" logplot="false" training="4"/>
<var def = "stage1_2BDT_XGBOOSTNue_mva" binning = "(40,0,1)"  unit = "Nue BDT" type="d" logplot="false" training="4"/>
-->

<!-- # sqrt(m1^2+m2^2 + 2*E2(E1 -p1cos()) -->
<!-- ================= RECO-MC Matching ======================== -->

<recomc>
    <def name="NC #Delta Radiative #gamma" col ="(1.0,0.4,0.4)"> 
        sim_shower_pdg[0] == 22 &amp;&amp; sim_shower_parent_pdg[0] != 111 &amp;&amp; mctruth_is_delta_radiative ==1 &amp;&amp; !(sim_shower_overlay_fraction[0] >=0.8 )             
    </def> 
    <def name="CC #pi^{0}" col ="(0.0,0.0,0.4)"> 
        sim_shower_pdg[0] == 22 &amp;&amp; sim_shower_parent_pdg[0] == 111 &amp;&amp; mctruth_cc_or_nc==0 &amp;&amp; !(sim_shower_overlay_fraction[0] >=0.8 )             
    </def> 
    <def name = "NC #pi^{0}" col="(0.0,0.0,1.0)">
        sim_shower_pdg[0] == 22 &amp;&amp; sim_shower_parent_pdg[0] == 111 &amp;&amp; mctruth_cc_or_nc==1 &amp;&amp; !(sim_shower_overlay_fraction[0] >=0.8 )             
    </def>
    <def name = "Non #pi^{0} #gamma" col="(0.8,0.2,0.8)">
        sim_shower_pdg[0] == 22 &amp;&amp; sim_shower_parent_pdg[0] != 111 &amp;&amp; mctruth_is_delta_radiative!=1 &amp;&amp; !(sim_shower_overlay_fraction[0] >=0.8 )             
    </def>
    <def name = "Intrinsic #nu_{e} electron" col="(1.0,1.0,0.4)">
        (mctruth_lepton_pdg[0])==11 &amp;&amp; abs(sim_shower_pdg[0]) ==11 &amp;&amp; !(sim_shower_overlay_fraction[0] >=0.8 )             
    </def>
    <def name = "BNB Michel e^{#pm}" col="(1.0,0.6,0.0)">
        abs(sim_shower_pdg[0]) ==11 &amp;&amp; abs(sim_shower_parent_pdg[0])==13 &amp;&amp; !(sim_shower_overlay_fraction[0] >=0.8 )
    </def>
    <def name = "Overlay" col="(0.2,0.8,0.2)">
        (sim_shower_overlay_fraction[0] >=0.8 )
    </def>


</recomc>


<alias key="PM" value ="(0.938272)"/>
<alias key="PE" value ="(reco_track_proton_kinetic_energy[0]+0.938272)"/>
<alias key="PP" value = "(sqrt(pow(reco_track_proton_kinetic_energy[0]+0.938272,2)-0.938272*0.938272))"/>
<alias key="LT" value ="0"/>

<alias key = "GTM" value = "sqrt(pow(0.001*reco_shower_energy_max[0]*reco_shower_diry[0],2)+pow(0.001*reco_shower_energy_max[0]*reco_shower_dirx[0],2))"/>
<alias key = "PTM" value = "sqrt(pow((reco_track_proton_kinetic_energy[0]+0.938272)*reco_track_diry[0],2)+pow((reco_track_proton_kinetic_energy[0]+0.938272)*reco_track_dirx[0],2))"/>

<alias key = "SIDX" value ="(reco_shower_startx[0]-reco_track_startx[0])/(sqrt( pow(reco_shower_startx[0]-reco_track_startx[0],2)+   pow(reco_shower_starty[0]-reco_track_starty[0],2) + pow(reco_shower_startz[0]-reco_track_startz[0],2)    ))"/>
<alias key = "SIDY" value ="(reco_shower_starty[0]-reco_track_starty[0])/(sqrt( pow(reco_shower_startx[0]-reco_track_startx[0],2)+   pow(reco_shower_starty[0]-reco_track_starty[0],2) + pow(reco_shower_startz[0]-reco_track_startz[0],2)    ))"/>
<alias key = "SIDZ" value ="(reco_shower_startz[0]-reco_track_startz[0])/(sqrt( pow(reco_shower_startx[0]-reco_track_startx[0],2)+   pow(reco_shower_starty[0]-reco_track_starty[0],2) + pow(reco_shower_startz[0]-reco_track_startz[0],2)    ))"/>

